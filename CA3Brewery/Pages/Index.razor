@page "/"
@using CA3Brewery.Brewery
@inject IBreweryService BreweryService
@using System.Collections.Generic
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Brewery</PageTitle>
<h1>Brewery List</h1>
<br />
<div>
    @if (breweries != null)
    {
        <ul>
            @foreach (var brewery in breweries)
            {
                <li @onclick="@(() => GetBreweryDetails(brewery.id))">@brewery.id</li>
            }
        </ul>
    }

    @if (selectedBrewery != null)
    {
        <h2>Brewery Details</h2>
        <p>Name: @selectedBrewery.name</p>
        <p>Brewery Type: @selectedBrewery.brewery_type</p>
        <p>Address: @selectedBrewery.street</p>
        // Other details of the selected brewery
    }
</div>

@code {
    private List<BreweryItem> breweries = new List<BreweryItem>();
    private BreweryItem selectedBrewery;
    public string Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var breweryService = new BreweryService(Http);
            breweries = await BreweryService.GetBrewery();
        }
        catch (Exception e)
        {
            Error = e.Message;
            Console.WriteLine(Error);
        }
    }

    private async Task GetBreweryDetails(string id)
    {
        try
        {
            // Use the injected instance of the BreweryService instead of creating a new instance
            selectedBrewery = await BreweryService.GetBreweryDetails(id);

            // Update the UI to show the selected brewery
            StateHasChanged();
        }
        catch (Exception ex)
        {
            // Display an error message to the user
            Error = ex.Message;
            Console.WriteLine(Error);
        }
}
}

@if (Error != null)
{
    <p>Error: @Error</p>
}
